install.packages("descr")
library(descr)
library(readxl)
library(descr)
library(descr)
library(readxl)
library(readxl)
exdata
exdata <- read_excel("C:\Users\wearf\data_ex.xlsx")
exdata <- read_excel("C:\RStudy\data_ex.xlsx")
exdata <- read_excel("C:/RStudy/data_ex.xlsx")
exdata
freq(exdata$population, plot = T, main = '총 인구수(barplot)')
freq(exdata$birth_rate, plot = T, main = '출산율(barplot)')
exdata <- read_excel("C:/RStudy/data_ex.xlsx")
freq(exdata$birth_rate, plot = T, main = '출산율(barplot)')
freq(exdata$population, plot = T, main = '총 인구수(barplot)')
barplot(exdata)
dist_data <- table(exdata$population)
dist_data
dist_data <- table(exdata$year)
dist_data
freq(exdata$year, plot=T, main="연도")
dist_data <- table(exdata$population)
freq(exdata$population, plot = T, main = '총 인구수(barplot)')
freq(exdata$birth_rate, plot = T, main = '총 인구수(barplot)')
hist(exdata$population, main="총 인구수")
hist(exdata$population, xlim=c(0, 60), ylim=c(0, 7), main="총 인구수")
hist(exdata$population, main="총 인구수")
hist(exdata$birth_rate, main="총 인구수")
hist(exdata$birth_rate, main="출산율")
pie(exdata)
x <- table(exdata$population)
pie(x)
hist(exdata$birth_rate, main="출산율")
freq(exdata$population, plot = T, main = '총 인구수(barplot)')
clear
install.packages("dplyr")
library(dplyr)
nrow(mtcars)
str(mtcars)
filter(mtcars, cyl==4)
filter(mtcars, cyl >= 6 & mpg > 20)
hand(select(mtcars, am, gear))
head(select(mtcars, am, gear))
head(arrange(mtcars, wt))
head(arrange(mtcars, mpg, desc(wt)))
head(mutate(mtcars, years = "1974"))
head(mutate(mtcars, mpg_rank = rank(mpg)))
distinct(mtcars, cyl)
distinct(mtcars, gear)
distinct(mtcars, cyl, gear)
summarise(mtcars, cyl_mean = mean(cyl), cyl_min = min(cyl), cyl_max = max(cyl))
summarise(mtcars, mean(cyl), min(cyl), max(cyl))
gr_cyl <- group_by(mtcars, cyl)
summarise(gr_cyl, n())
gr_cyl <- group_by(mtcars, cyl)
summarise(gr_cyl, n_distinct(gear))
sample_n(mtcars, 10)
sample_frac(mtcars, 0.2)
group_by(mtcars, cyl) %>% summarise(n())
mp_rank <- mutate(mtcars, mpg_rank = rank(mpg))
arrange(mp_rank, mpg_rank)
mutate(mtcars, mpg_rank = rank(mpg)) %>% arrange(mpg_rank)
library(dplyr)
library(readxl)
exdata1 <- read_excel("C:/RStudy/data_ex.xlsx")
exdata1
exdata1 %>% select(year)
exdata1 %>% select(year, population, birth_rate, death_rate)
exdata1 %>% select(-year)
exdata1 %>% select(-id, -year)
exdata1 %>% filter(year == '2023')
exdata1 %>% filter(year == '2023' & population >= 40000000)
exdata1 %>% filter(population >= 40000000 & birth_rate >= 500000)
exdata1 %>% arrange(population)
exdata1 %>% arrange(birth_rate)
exdata1 %>% arrange(desc(birth_rate))
exdata1 %>% arrange(birth_rate, desc(death_rate))
exdata1 %>% summarise(TOT_BIRTH_RATE = sum(birth_rate))
exdata1 %>% group_by(birth_rate) %>% summarise(SUM_BIRTH_RATE = sum(birth_rate))
library(readxl)
m_history <- read_excel("C:/RStudy/data_ex.xlsx")
f_history <- read_excel("C:/RStudy/data_ex2.xlsx")
View(m_history)
View(f_history)
exdata_bindjoin <- bind_rows(m_history, f_history)
View(exdata_bindjoin)
library(readxl)
jeju_y21_history <- read_excel("C:/RStudy/jeju_y21_history.xlsx")
jeju_y20_history <- read_excel("C:/RStudy/jeju_y20_history.xlsx")
View(jeju_y21_history)
View(jeju_y20_history)
bind_col <- left_join(jeju_y21_history, jeju_y20_history, by = "ID")
View(bind_col)
bind_col_inner <- inner_join(jeju_y21_history, jeju_y20_history, by = "ID")
View(bind_col_inner)
bind_col_full <- full_join(jeju_y21_history, jeju_y20_history, by = "ID")
View(bind_col_full)
# 데이터 불러오기
demographic_data <- read.csv("PopulationByYear.csv")
# 데이터 구조 확인
str(demographic_data)
# 데이터 확인
head(demographic_data)
# 수치형으로 변환
demographic_data <- demographic_data %>%
mutate(year = as.numeric(year),
population = as.numeric(gsub(",", "", population)),
birth_rate = as.numeric(gsub(",", "", birth_rate)),
death_rate = as.numeric(gsub(",", "", death_rate)),
natural_increase_rate = as.numeric(gsub(",", "", natural_increase_rate)))
ggplot(demographic_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
library(ggplot2)
install.packages("ggplot2")
ggplot(demographic_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
install.packages("ggplot")
ggplot(demographic_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
install.packages("lubridate")
library(tidyverse)
library(lubridate)
demographic_data <- read.csv("PopulationByYear.csv")
# 데이터 구조 확인
str(demographic_data)
# 데이터 확인
head(demographic_data)
# 수치형으로 변환
demographic_data <- demographic_data %>%
mutate(year = as.numeric(year),
population = as.numeric(gsub(",", "", population)),
birth_rate = as.numeric(gsub(",", "", birth_rate)),
death_rate = as.numeric(gsub(",", "", death_rate)),
natural_increase_rate = as.numeric(gsub(",", "", natural_increase_rate)))
# 변환된 데이터 확인
str(demographic_data)
head(demographic_data)
ggplot(demographic_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
demographic_data_long <- demographic_data %>%
pivot_longer(cols = c(birth_rate, death_rate, natural_increase_rate),
names_to = "rate_type", values_to = "rate")
ggplot(demographic_data_long, aes(x = year, y = rate, color = rate_type)) +
geom_line() +
geom_point() +
ggtitle("연도별 출생률, 사망률, 자연증감률 변화") +
xlab("연도") +
ylab("비율 (명)") +
theme_minimal() +
scale_color_manual(values = c("birth_rate" = "green",
"death_rate" = "red",
"natural_increase_rate" = "blue"))
demographic_data <- demographic_data %>%
mutate(cumulative_births = cumsum(birth_rate),
cumulative_deaths = cumsum(death_rate),
cumulative_natural_increase = cumsum(natural_increase_rate))
# 누적 출생, 사망, 자연증가 수 시각화
demographic_data_long_cumulative <- demographic_data %>%
pivot_longer(cols = c(cumulative_births, cumulative_deaths, cumulative_natural_increase),
names_to = "cumulative_type", values_to = "cumulative_value")
ggplot(demographic_data_long_cumulative, aes(x = year, y = cumulative_value, fill = cumulative_type)) +
geom_bar(stat = "identity", position = "stack") +
ggtitle("연도별 누적 출생, 사망, 자연증가 수 변화") +
xlab("연도") +
ylab("누적 수 (명)") +
theme_minimal() +
scale_fill_manual(values = c("cumulative_births" = "green",
"cumulative_deaths" = "red",
"cumulative_natural_increase" = "blue"))
future_data <- read.csv("PopulationByFuture.csv")
str(future_data)
# 수치형으로 변환
future_data <- future_data %>%
mutate(year = as.numeric(year),
population = as.numeric(gsub(",", "", population)),
birth_rate = as.numeric(gsub(",", "", birth_rate)),
death_rate = as.numeric(gsub(",", "", death_rate)),
natural_increase_rate = as.numeric(gsub(",", "", natural_increase_rate)))
# 변환된 데이터 확인
str(future_data)
head(future_data)
ggplot(future_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("미래 연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
# 출생률, 사망률, 자연증감률 시각화
future_data_long <- future_data %>%
pivot_longer(cols = c(birth_rate, death_rate, natural_increase_rate),
names_to = "rate_type", values_to = "rate")
ggplot(future_data_long, aes(x = year, y = rate, color = rate_type)) +
geom_line() +
geom_point() +
ggtitle("장래 연도별 출생률, 사망률, 자연증감률 변화") +
xlab("연도") +
ylab("비율 (명)") +
theme_minimal() +
scale_color_manual(values = c("birth_rate" = "green",
"death_rate" = "red",
"natural_increase_rate" = "blue"))
ggplot(future_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("미래 연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
ggplot(future_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("미래 연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
ggplot(future_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("미래 연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
ggplot(demographic_data, aes(x = year, y = population)) +
geom_line(color = "blue") +
geom_point(color = "red") +
ggtitle("연도별 인구 변화 추이") +
xlab("연도") +
ylab("인구수") +
theme_minimal()
